server.port=6000
spring.application.name=auth-application
# server.servlet.context-path=/auth
# 生效环境
spring.profiles.active=local,dev
# 注册中心
#spring.cloud.nacos.discovery.server-addr=localhost:8848
#spring.cloud.nacos.username=nacos
#spring.cloud.nacos.password=nacos
# 数据库
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/db_auth
spring.datasource.username=db_user_auth
spring.datasource.password=db_user_auth_password
#mybatis-plus 日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.mapper-locations=classpath*:mapper/*.xml
# 启用虚拟线程
spring.threads.virtual.enabled=true
# 自定义前后端分离前端登录页面地址
spring.security.oauth2.authorizationserver.custom.login.page.uri=http://127.0.0.1:5137
# 自定义允许跨域域名
spring.security.oauth2.authorizationserver.custom.cors.origin.allowed=http://127.0.0.1:5174,https://*.geek.cn:[*],https://*.geekim.cn:[*]
# OAuth2 端点配置
spring.security.oauth2.authorizationserver.issuer=http://192.168.XX.XXX:8080
#spring.security.oauth2.authorizationserver.endpoint.handler-path=/authorization
### 登录端点: 此端点链接到AuthorizationController#login() 接口地址
#spring.security.oauth2.authorizationserver.endpoint.login-processing-uri=${server.servlet.context-path}/${spring.security.oauth2.authorizationserver.endpoint.handler-path}/login
#spring.security.oauth2.authorizationserver.endpoint.authorization-uri=${server.servlet.context-path}/oauth2/authorize
#spring.security.oauth2.authorizationserver.endpoint.device-authorization-uri=${server.servlet.context-path}/oauth2/device_authorization
#spring.security.oauth2.authorizationserver.endpoint.device-verification-uri=${server.servlet.context-path}/oauth2/device_verification
#spring.security.oauth2.authorizationserver.endpoint.token-uri=${server.servlet.context-path}/oauth2/token
#spring.security.oauth2.authorizationserver.endpoint.jwk-set-uri=${server.servlet.context-path}/oauth2/jwks
#spring.security.oauth2.authorizationserver.endpoint.token-revocation-uri=${server.servlet.context-path}/oauth2/revoke
#spring.security.oauth2.authorizationserver.endpoint.token-introspection-uri=${server.servlet.context-path}/oauth2/introspect
#spring.security.oauth2.authorizationserver.endpoint.oidc.user-info-uri=${server.servlet.context-path}/userinfo
#spring.security.oauth2.authorizationserver.endpoint.oidc.logout-uri=${server.servlet.context-path}/connect/logout
#spring.security.oauth2.authorizationserver.endpoint.oidc.client-registration-uri=${server.servlet.context-path}/connect/register
# redis 配置
spring.data.redis.host=127.0.0.1
spring.data.redis.port=6379
spring.data.redis.password=
